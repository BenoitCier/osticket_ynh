#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE
password=$YNH_APP_ARG_PASSWORD

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=language --value=$language

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"
ynh_setup_source --dest_dir="$final_path/include/plugins/build" --source_id="core-plugins"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/archiver" --source_id="plugin-archiver"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/attachment_preview" --source_id="plugin-attachment_preview"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/autocloser" --source_id="plugin-autocloser"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/fetch-note" --source_id="plugin-fetch-note"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/field-radiobuttons" --source_id="plugin-field-radiobuttons"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/fwd-rewriter" --source_id="plugin-fwd-rewriter"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/mattermost" --source_id="plugin-mattermost"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/mentioner" --source_id="plugin-mentioner"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/microsoft-teams" --source_id="plugin-microsoft-teams"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/slack" --source_id="plugin-slack"
ynh_setup_source --dest_dir="$final_path/include/plugins/build/preventautoscroll" --source_id="plugin-preventautoscroll"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --usage=low --footprint=low --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# PREPARE INSTALL
#=================================================
ynh_script_progression --message="Preparing install..."

config_file=$final_path/include/ost-config.php
cp -f ../conf/ost-sampleconfig.php "$config_file"

admin_fname=$(ynh_user_get_info $admin 'firstname')
admin_lname=$(ynh_user_get_info $admin 'lastname')
admin_mail=$(ynh_user_get_info $admin 'mail')

#=================================================
# BUILD PLUGINS
#=================================================
ynh_script_progression --message="Building plugins..."

mkdir -p "$final_path/include/plugins/build/.config/composer"
COMPOSER_HOME="$final_path/include/plugins/build/.config/composer"

pushd "$final_path/include/plugins/build"
	php${phpversion} make.php hydrate
	php${phpversion} -dphar.readonly=0 make.php build auth-cas
	php${phpversion} -dphar.readonly=0 make.php build auth-ldap
	php${phpversion} -dphar.readonly=0 make.php build auth-oauth
	php${phpversion} -dphar.readonly=0 make.php build auth-passthru
	php${phpversion} -dphar.readonly=0 make.php build storage-fs
	php${phpversion} -dphar.readonly=0 make.php build storage-s3
	php${phpversion} -dphar.readonly=0 make.php build archiver
	php${phpversion} -dphar.readonly=0 make.php build attachment_preview
	php${phpversion} -dphar.readonly=0 make.php build autocloser
	php${phpversion} -dphar.readonly=0 make.php build fetch-note
	php${phpversion} -dphar.readonly=0 make.php build field-radiobuttons
	php${phpversion} -dphar.readonly=0 make.php build fwd-rewriter
	php${phpversion} -dphar.readonly=0 make.php build mattermost
	php${phpversion} -dphar.readonly=0 make.php build mentioner
	php${phpversion} -dphar.readonly=0 make.php build microsoft-teams
	php${phpversion} -dphar.readonly=0 make.php build slack
	php${phpversion} -dphar.readonly=0 make.php build preventautoscroll
	cp *.phar $final_path/include/plugins/.
popd
ynh_secure_remove --file="$final_path/include/plugins/build"

#=================================================
# INSTALL LANGUAGE
#=================================================
ynh_script_progression --message="Installing language..."

rsync -a "../conf/i18n" "$final_path/include/."

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Setuping application with CURL..."

# Set right permissions for curl install
chown -R $app: $final_path

# Set the app as temporarily public for curl call
ynh_script_progression --message="Configuring SSOwat..."
# Making the app public for curl
ynh_permission_update --permission="main" --add="visitors"
# Reload SSOwat config
yunohost app ssowatconf

# Reload Nginx
ynh_systemd_action --service_name=nginx --action=reload

# Installation with curl
ynh_script_progression --message="Finalizing installation..."
ynh_local_curl "/setup/install.php" "s=install" "name=$app" "email=$app@$domain" "lang_id=$language" "fname=$admin_fname" "lname=$admin_lname" "admin_email=$admin_mail" "username=$admin" "passwd=$password" "passwd2=$password" "prefix=ost_" "dbhost=localhost" "dbname=$db_name" "dbuser=$db_user" "dbpass=$db_pwd"

# Remove the public access
ynh_permission_update --permission="main" --remove="visitors"

#=================================================
# FINALIZE INSTALL
#=================================================
ynh_script_progression --message="Finalizing install..."

# Removing setup folder
ynh_secure_remove --file="$final_path/setup"

# Securing config file
chmod 0644 $config_file

#=================================================
# SET THE CRON FILE
#=================================================
ynh_script_progression --message="Setting the cron file..."

cp ../conf/cron /etc/cron.d/$app

ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="/etc/cron.d/$app"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_script_progression --message="Storing the config file checksum..."

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$config_file"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..."

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
